name: 🚀 Build and Deploy Nuxt.js 4 SSG App to OVH VPS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    name: 🏗️ Build & Deploy
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v5

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📝 Setup environment file
        run: |
          cp .env.example .env
          echo "NODE_ENV=production" >> .env
          echo "GITHUB_TOKEN=${{ secrets.DIBODEV_STATS_GITHUB_TOKEN }}" >> .env
          echo "MAILJET_API_KEY=${{ secrets.MAILJET_API_KEY }}" >> .env
          echo "MAILJET_API_SECRET=${{ secrets.MAILJET_API_SECRET }}" >> .env

      - name: 🛠️ Generate Static Site (Frontend)
        run: |
          npm run generate
          ls -la .output
        env:
          NITRO_PRESET: static

      - name: 📂 Save static site output
        run: |
          if [ -d ".output/public" ]; then
            mv .output/public .output/public-static
            echo "Static site output saved to .output/public-static"
            ls -la .output
          else
            echo "Error: .output/public does not exist after npm run generate"
            exit 1
          fi

      - name: 🛠️ Build Server (Nitro)
        run: |
          npm run build
          ls -la .output
        env:
          NITRO_PRESET: node-server

      - name: 📂 Restore static site output
        run: |
          if [ -d ".output/public-static" ]; then
            rm -rf .output/public
            mv .output/public-static .output/public
            echo "Static site output restored to .output/public"
            ls -la .output
          else
            echo "Error: .output/public-static does not exist"
            exit 1
          fi

      - name: 📤 Deploy static files to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: '.output/public/*'
          target: '/var/www/dibodev.fr/html'
          strip_components: 2

      - name: 📤 Deploy Nitro server to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: '.output/server/*,.env'
          target: '/var/www/dibodev.fr/server'
          strip_components: 2

      - name: 🛠️ Start Nitro server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Install Node.js if not already installed
            if ! command -v node &> /dev/null; then
              curl -fsSL https://deb.nodesource.com/setup_22.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi
            # Install PM2 if not already installed
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
            fi
            # Start Nitro server with PM2
            cd /var/www/dibodev.fr/server
            pm2 stop dibodev-nuxt-api || true
            pm2 start index.mjs --name dibodev-nuxt-api
            pm2 save
            # Restart Nginx
            sudo nginx -t
            sudo systemctl restart nginx
